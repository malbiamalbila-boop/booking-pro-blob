openapi: 3.1.0
info:
  title: BookingPro Fleet Ops API
  version: 1.0.0
  description: Internal API contract for fleet availability, pricing, reservations, handover, and reporting flows.
servers:
  - url: https://bookingpro.example.com
  - url: http://localhost:3000
components:
  securitySchemes:
    session:
      type: http
      scheme: bearer
      bearerFormat: session-token
paths:
  /api/availability:
    get:
      summary: Availability search
      operationId: getAvailability
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: pickup_branch
          schema:
            type: string
        - in: query
          name: dropoff_branch
          schema:
            type: string
        - in: query
          name: class
          schema:
            type: string
      responses:
        '200':
          description: Availability result
          content:
            application/json:
              schema:
                type: object
                properties:
                  availability:
                    type: array
                    items:
                      type: object
                      properties:
                        vehicleId:
                          type: string
                        classCode:
                          type: string
                        score:
                          type: number
                        notes:
                          type: string
  /api/pricing/quote:
    post:
      summary: Price quote
      operationId: postPricingQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicleClassId:
                  type: string
                pickupAt:
                  type: string
                  format: date-time
                dropoffAt:
                  type: string
                  format: date-time
                extras:
                  type: array
                  items:
                    type: string
                currency:
                  type: string
      responses:
        '200':
          description: Calculated quote
          content:
            application/json:
              schema:
                type: object
                properties:
                  totals:
                    type: object
                  breakdown:
                    type: array
                    items:
                      type: object
  /api/quotes:
    post:
      summary: Create a provisional quote
      operationId: postQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote:
                  type: object
      responses:
        '201':
          description: Quote created
  /api/reservations:
    post:
      summary: Create reservation
      operationId: postReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation:
                  type: object
      responses:
        '201':
          description: Reservation created
    get:
      summary: List reservations
      operationId: listReservations
      parameters:
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: Reservations list
  /api/reservations/{id}:
    get:
      summary: Get reservation detail
      operationId: getReservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reservation payload
    patch:
      summary: Update reservation
      operationId: patchReservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated
  /api/handover/{reservationId}/checkout:
    post:
      summary: Record checkout data
      operationId: postHandoverCheckout
      parameters:
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                odometer:
                  type: integer
      responses:
        '200':
          description: Checkout stored
  /api/handover/{reservationId}/checkin:
    post:
      summary: Record checkin data
      operationId: postHandoverCheckin
      parameters:
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                odometer:
                  type: integer
      responses:
        '200':
          description: Checkin stored
  /api/webhooks/telematics:
    post:
      summary: Receive Traccar events
      operationId: postTelematics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '202':
          description: Accepted
  /api/calendar/{vehicleId}.ics:
    get:
      summary: Vehicle reservation feed
      operationId: getVehicleCalendar
      parameters:
        - in: path
          name: vehicleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: iCalendar feed
          content:
            text/calendar:
              schema:
                type: string
  /api/reports/occupancy:
    get:
      summary: Occupancy report
      operationId: getOccupancyReport
      responses:
        '200':
          description: Occupancy metrics
  /api/reports/utilization:
    get:
      summary: Utilization report
      operationId: getUtilizationReport
      responses:
        '200':
          description: Utilization metrics
  /api/reports/damages:
    get:
      summary: Damage report
      operationId: getDamageReport
      responses:
        '200':
          description: Damage summary
  /api/export/csv:
    get:
      summary: Export CSV
      operationId: getExportCsv
      responses:
        '200':
          description: CSV export
          content:
            text/csv:
              schema:
                type: string
  /api/admin/vehicles:
    get:
      summary: List vehicles
      operationId: listVehicles
      responses:
        '200':
          description: Vehicle list
    post:
      summary: Create vehicle
      operationId: postVehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Vehicle created
  /api/admin/vehicles/{id}:
    patch:
      summary: Update vehicle
      operationId: patchVehicle
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated vehicle
security:
  - session: []
